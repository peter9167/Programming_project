널 - 종료 문자열 (Null-terminated string)

- 문자열을 이용할 때 마다 문자열의 길이를 알아야하는 문제점을 해결하고자 문자열의 끝에 종료 문자를 넣음.
- 예를 들면 char s[0] = "psi" 라고 하면 {"p","s","i","\0"} 처럼 null 문자가 추가됨.
- null 문자를 저장하기 위해서 여분의 공간이 필요함.

- 문자열 끝에 널 문자가 없으면 
 1. printf 함수를 비슷한 많은 문자열 처리함수가 널문자로 문자열의 끝을 확인하는 특징을 가짐
 -------------
 char str[5];
 str[0] = 'O';
 str[1] = 'K';
 printf("%s\n", str);
 -------------
 2. 위와 같이 문자열로 저장하지 않고 5행의 배열을 초기화되지 않아서 쓰레기 값이 저장됨. 
 3. 그렇게 되면 요소에 널 문자가 없으므로 널 문자가 나올 때까지 쓰레기값을 계속 출력.
 4. 때로는 메모리 접근 오류 발생.
 5. 아래와 같이 선언하면 오류없이 출력 가능.
 -------------
 char s1[4] = {'P', 's', 'i', '\0'};
 char s2[4] = {'P', 's', 'i', 0};
 char s3[4] = {'P', 's', 'i', (char)NULL};
 char s4[4] = {"Psi"};
 -------------




" " 와 '' 의 차이점
-----------------
"" : 큰따옴표는 문자열(한 개 이상의 문자)를 지정할 때 사용된다.
예) "abd", "asdfasdf", "sentence", "a" 등등

'' : 작은 따옴표는 한 개의 문자를 지정할 때 사용된다.
예) 'a', 'b', '\0' (틀린표현 : 'abc', 'ab', 'cd' 등등)




문자열 선언
- 배열 크기 미지정, 초기화에 의해 크기 결정
크기 미지정 : char str1[] = {"Hello World!"};
초기화 : char str2[12] = {"Hello World!"};

배열을 할당하지 않고 주소값을 포인터가 가르키도록 하여 문자열 지정 : const char *str = "Hello World!";

- 여기서 	char str[] = {"hello"} 와 
       	char str[] = "hello" 는 같은 코드이다. 
