본 본문을 읽거나 참조하기 전에 예제 참고하면서 진행
----------------------------------------
 test1.c	- 같은 디렉토리 파일 참고
 str1.c		- 같은 디렉토리 파일 참고
----------------------------------------

상기 프로그램 동작 원리

test.c		  str.c
  ↓ -----컴파일----- ↓
test.o		  str.o
  ↘ ------링킹----- ↙
	test.exe

컴파일 - C 코드를 컴퓨터가 이해할 수 있는 언어로 바꿔주는 컴파일(compile) 과정 진행
  단일 소스 코드 전체를 어셈블리어로 변환

링킹 - 컴파일 작업 이후 링킹(linking) 과정 진행
  각기 다른 파일에 위치한 소스 코드들을 한데 엮어서 하나의 실행 파일로 만들어지는 과정

- compare 함수는 str.c 에 있기 때문에 링커(링킹을 해주는 프로그램) 는 
'test.c 에서 compare 함수를 호출하는 경우 str.c 에서 찾아라' 정도로 처리
- 그렇기에 test.c 에서 compare 함수를 호출하더라도 str.c 의 
compare 함수를 이용 가능

- 이렇게 귀찮은 작업을 막기 위해 C 에서는 아주 놀라운 해결책을 제시하였는데 바로 
헤더파일 (header file) 을 이용하는 것이다. 
- 헤더파일은 다음과 같은 방법으로 만들 수 있다. (아래 예제 참고)

----------------------------------------
 test2.c	- 같은 디렉토리 파일 참고
 str2.c		- 같은 디렉토리 파일 참고
 str2.h		- 같은 디렉토리 파일 참고
----------------------------------------

- #include 와 같은 명령들은 전처리기(Preprocessor) 명령이라고 부른다. 
- 이러한 명령들의 특징은 컴파일 이전에 실행된다.
- 이 명령은 우리가 지칭하는 파일의 내용을 정확히 100% 복사해서 붙여 넣는다는 점
- 따라서 #include "str.h" 라는 명령은 str.h 에 있었던 내용, 
  즉 char compare(char *str1, char *str2); 로 컴파일이 시작하기 전에 바꿈

- 마찬가지로 #include <stdio.h> 도 위와 같이 동작한다.

- < > 로 감싸는 헤더파일은 컴파일러에서 기본으로 지원하는 헤더파일
- " " 로 감싸는 헤더파일은 사용자가 직접 제작한 헤더파일 을 나타낸다. 







